[{"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\index.js":"1","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\redux\\store.js":"2","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\main\\App.jsx":"3","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\redux\\spareDucks.js":"4","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\redux\\globalDucks.js":"5","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\redux\\clientDucks.js":"6","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\Routes.js":"7","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\constants.js":"8","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\clients\\Clients.jsx":"9","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\clients\\Repairs.jsx":"10","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\functions\\index.js":"11","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\index.jsx":"12","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\helpers\\tablesThArray.js":"13","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\Layout.jsx":"14","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\main\\NavBar.jsx":"15","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\Box.jsx":"16","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\EditIcon.jsx":"17","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\main\\Main.jsx":"18","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\DeleteIcon.jsx":"19","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\forms\\EditSpareForm.jsx":"20","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\spare-parts\\SpareParts.jsx":"21","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\forms\\CreateSpareForm.jsx":"22","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\forms\\CreateClientForm.jsx":"23","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\forms\\EditClientForm.jsx":"24","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\helpers\\filtersArrays.js":"25","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\forms\\BoxForm.jsx":"26","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\main\\Header.jsx":"27","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\tables\\TableBodyClients.jsx":"28","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\tables\\TableBodySpares.jsx":"29","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\main\\Footer.jsx":"30","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\ImageBox.jsx":"31","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\SearchIcon.jsx":"32","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\PlusIcon.jsx":"33","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\modals\\ModalPictures.jsx":"34","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\modals\\ModalDelete.jsx":"35"},{"size":409,"mtime":1629153090351,"results":"36","hashOfConfig":"37"},{"size":731,"mtime":1629226271955,"results":"38","hashOfConfig":"37"},{"size":236,"mtime":1659060560670,"results":"39","hashOfConfig":"37"},{"size":5324,"mtime":1659122411552,"results":"40","hashOfConfig":"37"},{"size":2310,"mtime":1629266746358,"results":"41","hashOfConfig":"37"},{"size":4261,"mtime":1633718091666,"results":"42","hashOfConfig":"37"},{"size":588,"mtime":1630273137115,"results":"43","hashOfConfig":"37"},{"size":3783,"mtime":1659120231319,"results":"44","hashOfConfig":"37"},{"size":362,"mtime":1629272463900,"results":"45","hashOfConfig":"37"},{"size":151,"mtime":1659060560670,"results":"46","hashOfConfig":"37"},{"size":1277,"mtime":1658707877637,"results":"47","hashOfConfig":"37"},{"size":626,"mtime":1629412401492,"results":"48","hashOfConfig":"37"},{"size":308,"mtime":1618773840158,"results":"49","hashOfConfig":"37"},{"size":7139,"mtime":1659121803922,"results":"50","hashOfConfig":"37"},{"size":636,"mtime":1629264603987,"results":"51","hashOfConfig":"37"},{"size":295,"mtime":1630810567148,"results":"52","hashOfConfig":"37"},{"size":564,"mtime":1617062688227,"results":"53","hashOfConfig":"37"},{"size":607,"mtime":1659120613008,"results":"54","hashOfConfig":"37"},{"size":571,"mtime":1617062680559,"results":"55","hashOfConfig":"37"},{"size":6459,"mtime":1629485522203,"results":"56","hashOfConfig":"37"},{"size":408,"mtime":1659122085296,"results":"57","hashOfConfig":"37"},{"size":4026,"mtime":1659062248140,"results":"58","hashOfConfig":"37"},{"size":3600,"mtime":1659120566172,"results":"59","hashOfConfig":"37"},{"size":3755,"mtime":1629483369455,"results":"60","hashOfConfig":"37"},{"size":181,"mtime":1618773157721,"results":"61","hashOfConfig":"37"},{"size":3778,"mtime":1659122145721,"results":"62","hashOfConfig":"37"},{"size":1113,"mtime":1629264412094,"results":"63","hashOfConfig":"37"},{"size":3858,"mtime":1629637981453,"results":"64","hashOfConfig":"37"},{"size":6803,"mtime":1659121585245,"results":"65","hashOfConfig":"37"},{"size":693,"mtime":1659056357984,"results":"66","hashOfConfig":"37"},{"size":738,"mtime":1659059651506,"results":"67","hashOfConfig":"37"},{"size":557,"mtime":1617296631299,"results":"68","hashOfConfig":"37"},{"size":521,"mtime":1617296349418,"results":"69","hashOfConfig":"37"},{"size":1224,"mtime":1629126700297,"results":"70","hashOfConfig":"37"},{"size":803,"mtime":1629255614345,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"v6ir6r",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\index.js",[],["146","147"],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\redux\\store.js",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\main\\App.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\redux\\spareDucks.js",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\redux\\globalDucks.js",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\redux\\clientDucks.js",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\Routes.js",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\constants.js",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\clients\\Clients.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\clients\\Repairs.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\functions\\index.js",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\index.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\helpers\\tablesThArray.js",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\Layout.jsx",["148"],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\main\\NavBar.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\Box.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\EditIcon.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\main\\Main.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\DeleteIcon.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\forms\\EditSpareForm.jsx",["149"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Spinner\r\n} from \"reactstrap\";\r\nimport ButtonRB from \"react-bootstrap/Button\";\r\nimport { __db__ } from \"../../constants\";\r\nimport ImageBox from \"../utils/ImageBox\";\r\nimport { editSpareAction } from \"../../redux/spareDucks\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  handleSetFiles,\r\n  handleSetMultimedia,\r\n  handleSetValue\r\n} from \"../utils/functions\";\r\nimport { alertSuccessOffAction } from \"../../redux/globalDucks\";\r\n\r\nconst EditSpareForm = ({ spare, toggleEdit }) => {\r\n  let {\r\n    nombre,\r\n    descripcion,\r\n    cantidad,\r\n    ubicacion,\r\n    images: imgs,\r\n    datasheet: datash\r\n  } = spare;\r\n\r\n  const [name, setName] = useState(nombre);\r\n  const [desc, setDesc] = useState(descripcion);\r\n  const [quant, setQuant] = useState(cantidad);\r\n  const [loc, setLoc] = useState(ubicacion);\r\n  const [images, setImages] = useState(imgs);\r\n  const [auxImages] = useState(imgs);\r\n  const [datasheet, setDatasheet] = useState(datash);\r\n  const [arrCancelImgs, setArrCancelImgs] = useState([]);\r\n  const [arrCancelDS, setArrayCancelDS] = useState([]);\r\n  const [hideDelImgs, setHideDelImgs] = useState(false);\r\n  const [hideDelDS, setHideDelDS] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const spinnerOn = useSelector(store => store.global.spinnerOn);\r\n\r\n  const handleEditSubmit = async e => {\r\n    e.preventDefault();\r\n    let id = spare._id;\r\n    let fData = new FormData();\r\n\r\n    let body = {\r\n      nombre: name,\r\n      descripcion: desc,\r\n      cantidad: quant,\r\n      ubicacion: loc,\r\n      deleteImages: arrCancelImgs,\r\n      deleteDatasheet: arrCancelDS\r\n    };\r\n\r\n    for (let key in body) {\r\n      fData.append(key, body[key]);\r\n    }\r\n\r\n    images.forEach(img => {\r\n      fData.append(\"images\", img);\r\n    });\r\n\r\n    if (datasheet) {\r\n      fData.append(\"datasheet\", datasheet[0]);\r\n    }\r\n\r\n    dispatch(editSpareAction(id, fData, toggleEdit));\r\n\r\n    setTimeout(() => {\r\n      dispatch(alertSuccessOffAction());\r\n    }, 3000);\r\n  };\r\n\r\n  const handleDelDS = () => {\r\n    let publicId = datasheet[0].public_id;\r\n    setArrayCancelDS(arrCancelDS => arrCancelDS.concat(publicId));\r\n    setHideDelDS(!hideDelDS);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (spare.images && spare.images.length > 0) {\r\n      setHideDelImgs(true);\r\n    }\r\n\r\n    if (spare.datasheet && spare.datasheet.length > 0) {\r\n      setHideDelDS(true);\r\n    }\r\n  }, [spare]);\r\n\r\n  return (\r\n    <div className=\"edit-form\">\r\n      <Form onSubmit={handleEditSubmit}>\r\n        <div className=\"d-flex justify-content-around\">\r\n          <div className=\"width40\">\r\n            <FormGroup>\r\n              <Label for=\"nombre\">Nombre</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                id=\"nombreIn\"\r\n                value={name}\r\n                onChange={e => handleSetValue(setName, e)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"descripcion\">Descripción</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"descripcion\"\r\n                id=\"descripcionIn\"\r\n                value={desc}\r\n                onChange={e => handleSetValue(setDesc, e)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"cantidad\">Cantidad</Label>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"cantidad\"\r\n                id=\"cantidadIn\"\r\n                value={quant}\r\n                onChange={e => handleSetValue(setQuant, e)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"ubicacion\">Ubicación</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"ubicacion\"\r\n                id=\"ubicacionIn\"\r\n                value={loc}\r\n                onChange={e => handleSetValue(setLoc, e)}\r\n              />\r\n            </FormGroup>\r\n          </div>\r\n          <div>\r\n            <div className=\"d-flex flex-column\">\r\n              <p\r\n                className={`font-sm mb-1 ${\r\n                  images.length > 0 && hideDelImgs ? \"\" : \"d-none\"\r\n                }`}\r\n              >\r\n                *Selecciona las <strong>imágenes</strong> que deseas\r\n                borrar\r\n              </p>\r\n              <div className=\"d-flex\">\r\n                {auxImages.length > 0 &&\r\n                  hideDelImgs &&\r\n                  auxImages.map(img => (\r\n                    <ImageBox\r\n                      img={img}\r\n                      setArrCancelImgs={setArrCancelImgs}\r\n                    />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n            <FormGroup>\r\n              <Label for=\"images\">Imágenes</Label>\r\n              <Input\r\n                type=\"file\"\r\n                name=\"images\"\r\n                id=\"imagesIn\"\r\n                onChange={e => handleSetMultimedia(setImages, e)}\r\n                multiple\r\n              />\r\n            </FormGroup>\r\n            <div className=\"d-flex flex-column\">\r\n              {hideDelDS ? (\r\n                <ButtonRB\r\n                  variant=\"danger\"\r\n                  className=\"mt-2\"\r\n                  onClick={handleDelDS}\r\n                >\r\n                  Eliminar Datasheet de{\" \"}\r\n                  <strong>{name.toUpperCase()}</strong>\r\n                </ButtonRB>\r\n              ) : (\r\n                <FormGroup className=\"mt-1\">\r\n                  <Label for=\"datasheet\">Datasheet</Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"datasheet\"\r\n                    id=\"datasheetIn\"\r\n                    onChange={e => handleSetFiles(setDatasheet, e)}\r\n                    multiple\r\n                  />\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Spinner\r\n          color=\"primary\"\r\n          style={{ marginLeft: \"33rem\" }}\r\n          className={`${!spinnerOn ? \"d-none\" : \"\"}`}\r\n        />\r\n        <Button\r\n          color=\"danger\"\r\n          className=\"float-right ml-2\"\r\n          onClick={() => toggleEdit()}\r\n        >\r\n          Cancelar\r\n        </Button>\r\n        <Button type=\"submit\" color=\"primary\" className=\"float-right\">\r\n          Editar\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditSpareForm;\r\n","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\spare-parts\\SpareParts.jsx",["150"],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\forms\\CreateSpareForm.jsx",["151"],"import React, { useState } from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label, Spinner } from \"reactstrap\";\r\nimport { spareFormData, __db__ } from \"../../constants\";\r\nimport { handleSetMultimedia, handleSetValue } from \"../utils/functions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewSpareAction } from \"../../redux/spareDucks\";\r\nimport { alertSuccessOffAction } from \"../../redux/globalDucks\";\r\n\r\nconst CreateSpareForm = ({ toggleCreate }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [loc, setLoc] = useState(\"\");\r\n    const [images, setImages] = useState([]);\r\n    const [datasheet, setDatasheet] = useState([]);\r\n    const [quant, setQuant] = useState(0);\r\n\r\n    const dispatch = useDispatch();\r\n    const spinnerOn = useSelector(store => store.global.spinnerOn);\r\n\r\n    const handleCreateSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        let fData = new FormData();\r\n\r\n        let body = {\r\n            nombre: name,\r\n            descripcion: desc,\r\n            cantidad: quant,\r\n            ubicacion: loc\r\n        };\r\n\r\n        for (let key in body) {\r\n            fData.append(key, body[key]);\r\n        }\r\n\r\n        images.forEach(img => {\r\n            fData.append(\"images\", img);\r\n        });\r\n\r\n        datasheet.forEach(sheet => {\r\n            fData.append(\"datasheet\", sheet);\r\n        });\r\n\r\n        dispatch(createNewSpareAction(fData, toggleCreate));\r\n\r\n        setTimeout(() => {\r\n            dispatch(alertSuccessOffAction());\r\n        }, 3000);\r\n    };\r\n\r\n    const SPARE_FORM_DATA = spareFormData(\r\n        handleSetValue,\r\n        handleSetMultimedia,\r\n        setName,\r\n        setDesc,\r\n        setQuant,\r\n        setLoc,\r\n        setImages,\r\n        setDatasheet\r\n    );\r\n\r\n    return (\r\n        <div className=\"edit-form user-select-none\">\r\n            <Form onSubmit={handleCreateSubmit} encType=\"multipart/form-data\">\r\n                <div className=\"d-flex justify-content-around\">\r\n                    {SPARE_FORM_DATA.map((data, i) => (\r\n                        <div key={i} className={i === 0 && \"width40\"}>\r\n                            {data.map(\r\n                                ({\r\n                                    id,\r\n                                    type,\r\n                                    label,\r\n                                    name,\r\n                                    placeholder,\r\n                                    onChange,\r\n                                    multiple\r\n                                }) => (\r\n                                    <FormGroup>\r\n                                        <Label for={name}>{label}</Label>\r\n                                        <Input\r\n                                            id={id}\r\n                                            type={type}\r\n                                            name={name}\r\n                                            placeholder={placeholder}\r\n                                            onChange={onChange}\r\n                                            multiple={multiple}\r\n                                        />\r\n                                    </FormGroup>\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <Spinner\r\n                    color=\"primary\"\r\n                    style={{ marginLeft: \"34rem\" }}\r\n                    className={`${!spinnerOn ? \"d-none\" : \"\"}`}\r\n                />\r\n                <Button\r\n                    color=\"danger\"\r\n                    className=\"float-right ml-2\"\r\n                    onClick={() => toggleCreate()}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\" className=\"float-right\">\r\n                    Crear\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateSpareForm;\r\n","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\forms\\CreateClientForm.jsx",["152"],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\forms\\EditClientForm.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\helpers\\filtersArrays.js",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\forms\\BoxForm.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\main\\Header.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\tables\\TableBodyClients.jsx",["153"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState, Suspense } from \"react\";\r\nimport { __db__ } from \"../../constants\";\r\nimport EditIcon from \"../utils/EditIcon\";\r\nimport DeleteIcon from \"../utils/DeleteIcon\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { capitalizeString } from \"../utils/functions\";\r\nimport { Modal, ModalBody } from \"reactstrap\";\r\nimport EditClientForm from \"../forms/EditClientForm\";\r\nimport {\r\n  alertDeleteOffAction,\r\n  alertOffErrorAction\r\n} from \"../../redux/globalDucks\";\r\nimport { deleteClientAction } from \"../../redux/clientDucks\";\r\n\r\nconst TableBodyClients = ({ cliente, setCliente }) => {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [clientEdit, setClientEdit] = useState({});\r\n  const [modalEdit, setModalEdit] = useState(false);\r\n  const [modalDelete, setModalDelete] = useState(false);\r\n  const ModalDelete = React.lazy(() =>\r\n    import(\"../modals/ModalDelete\")\r\n  );\r\n\r\n  // redux\r\n  const dispatch = useDispatch();\r\n  const clientsRedux = useSelector(store => store.clients.clientsArr);\r\n\r\n  const handleEdit = (e, client) => {\r\n    e.preventDefault();\r\n    toggleEdit();\r\n    setClientEdit(client);\r\n    dispatch(alertOffErrorAction());\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    setModalEdit(!modalEdit);\r\n    setClientes(clientes => [...clientes]);\r\n  };\r\n\r\n  const handleDelete = async e => {\r\n    e.preventDefault();\r\n\r\n    if (cliente) {\r\n      let id = cliente._id;\r\n\r\n      dispatch(deleteClientAction(id));\r\n\r\n      toggleDelete();\r\n      setTimeout(() => {\r\n        dispatch(alertDeleteOffAction());\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  const toggleDelete = cli => {\r\n    setModalDelete(!modalDelete);\r\n\r\n    if (cli) {\r\n      setCliente(cli);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setClientes(clientsRedux);\r\n  }, [clientsRedux]);\r\n\r\n  return (\r\n    <>\r\n      <tbody>\r\n        {clientes &&\r\n          clientes.map((elem, i) => (\r\n            <tr key={elem._id}>\r\n              <th scope=\"row\">{i + 1}</th>\r\n              <td>{capitalizeString(elem.nombre)}</td>\r\n              <td>{capitalizeString(elem.apellido)}</td>\r\n              <td>{elem.direccion}</td>\r\n              <td>{elem.telefono}</td>\r\n              <td>{elem.email}</td>\r\n              <td style={{ width: \"21rem\" }}>{elem.observaciones}</td>\r\n              <td className=\"\">\r\n                {/* edit */}\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"ion-edit no-dec\"\r\n                  onClick={e => handleEdit(e, elem)}\r\n                >\r\n                  <EditIcon />\r\n                </a>\r\n                {/* delete */}\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"ion-delete no-dec ml-3\"\r\n                  onClick={() => toggleDelete(elem)}\r\n                >\r\n                  <DeleteIcon />\r\n                </a>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n\r\n      {/* modal for edition */}\r\n      <div className=\"user-select-none\">\r\n        <Modal size=\"lg\" isOpen={modalEdit} toggleEdit={toggleEdit}>\r\n          <div className=\"d-flex justify-content-center \">\r\n            <h3 className=\"mx-auto pt-3 user-select-none\">\r\n              Editar Cliente\r\n            </h3>\r\n          </div>\r\n\r\n          <hr className=\"mx-2 mt-1\" />\r\n\r\n          <ModalBody>\r\n            <EditClientForm\r\n              client={clientEdit}\r\n              toggleEdit={toggleEdit}\r\n            />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n\r\n      {/* modal for deletion */}\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <ModalDelete\r\n          item={cliente}\r\n          modalDelete={modalDelete}\r\n          toggleDelete={toggleDelete}\r\n          handleDelete={handleDelete}\r\n        />\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableBodyClients;\r\n","E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\tables\\TableBodySpares.jsx",["154"],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\main\\Footer.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\ImageBox.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\SearchIcon.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\utils\\PlusIcon.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\modals\\ModalPictures.jsx",[],"E:\\documents\\Proyectos WEB\\milo-soft\\miloFrontend\\src\\components\\modals\\ModalDelete.jsx",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":39,"column":12,"nodeType":"161","messageId":"162","endLine":39,"endColumn":25},{"ruleId":"159","severity":1,"message":"163","line":11,"column":10,"nodeType":"161","messageId":"162","endLine":11,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":10,"column":22,"nodeType":"161","endLine":10,"endColumn":29},{"ruleId":"159","severity":1,"message":"163","line":3,"column":25,"nodeType":"161","messageId":"162","endLine":3,"endColumn":31},{"ruleId":"159","severity":1,"message":"163","line":4,"column":26,"nodeType":"161","messageId":"162","endLine":4,"endColumn":32},{"ruleId":"159","severity":1,"message":"163","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":16},{"ruleId":"159","severity":1,"message":"163","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":16},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'searchValElem' is assigned a value but never used.","Identifier","unusedVar","'__db__' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-global-assign","no-unsafe-negation"]